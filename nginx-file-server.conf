# NGINX Configuration for File Server with Directory Listing
# Save this as /etc/nginx/sites-available/file-server or update your existing config

server {
    listen 80;
    server_name your-server.com;  # Replace with your domain or IP

    # Global settings for large file uploads
    client_max_body_size 100M;
    client_body_timeout 300s;
    client_header_timeout 300s;
    client_body_buffer_size 128k;
    large_client_header_buffers 4 16k;

    # WebDAV location for file uploads
    location /uploads/ {
        root /var/www/files;

        # WebDAV configuration for uploads
        dav_methods PUT DELETE;
        dav_ext_methods PROPFIND MKCOL COPY MOVE;
        dav_access user:rw group:rw all:r;
        create_full_put_path on;

        # File upload limits
        client_max_body_size 100M;
        client_body_timeout 300s;
        client_body_temp_path /tmp/nginx_uploads;

        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            return 204;
        }

        # ðŸ”§ CRITICAL: Enable directory listing for API access
        autoindex on;
        autoindex_exact_size off;
        autoindex_format html;
        autoindex_localtime on;
    }

    # Static file serving with directory listing
    location /files/ {
        alias /var/www/files/uploads/;

        # ðŸ”§ CRITICAL: Enable directory listing
        autoindex on;
        autoindex_exact_size off;
        autoindex_format html;
        autoindex_localtime on;

        # CORS headers for file access
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            return 204;
        }

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Caching for static files
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # Root location for health checks
    location / {
        return 200 "NGINX File Server is running";
        add_header Content-Type text/plain;
    }

    # Health check endpoint
    location /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}
